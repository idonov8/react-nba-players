{"version":3,"sources":["components/PlayerCard.tsx","components/List.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PlayerCard","player","handleFavorite","Wrapper","first_name","last_name","position","Favorite","type","checked","favorite","name","onChange","e","id","target","styled","section","input","List","props","useState","searchField","setSearchField","bgColor","setBgColor","listItems","items","filter","item","toLowerCase","includes","map","style","padding","alignItems","backgroundColor","title","htmlFor","value","bgColors","color","onClick","App","players","setPlayers","alert","useAlert","useEffect","console","log","info","timeout","fetch","then","res","json","result","data","error","prevPlayers","find","indexOf","className","ListsContatiner","div","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","options","positions","BOTTOM_CENTER","offset","transition","transitions","SCALE","ReactDOM","render","template","AlertTemplate","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e145c09b.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Player from '../types/Player'\r\n\r\ninterface Props {\r\n    player: Player\r\n    handleFavorite: (id: number, checked: boolean) => void\r\n}\r\nconst PlayerCard: React.FC<Props> = ({ player, handleFavorite }) => {\r\n    return (<>\r\n        <Wrapper>\r\n            <b>Name: </b>{player.first_name + \" \" + player.last_name} \r\n            <br/>\r\n            <b>Position: </b>{player.position}\r\n            <br/>\r\n            <label>Favorite: </label>\r\n            <Favorite type=\"checkbox\" checked={player.favorite} name=\"favorite\" onChange={(e => handleFavorite(player.id, e.target.checked))}/>\r\n        </Wrapper></>\r\n    )\r\n}\r\nexport default PlayerCard\r\n\r\nconst Wrapper = styled.section`\r\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\r\n    transition: 0.3s;\r\n    padding: 3%;\r\n    text-align: left;\r\n`\r\n\r\nconst Favorite = styled.input`\r\n`","import React, { useState } from 'react'\r\nimport Player from '../types/Player'\r\nimport PlayerCard from './PlayerCard'\r\n\r\ninterface Props {\r\n    title?: string\r\n    bgColors?: Array<string>\r\n    items: Array<Player>\r\n    handleFavorite: (id: number, checked: boolean) => void\r\n}\r\nconst List: React.FC<Props> = (props) => {\r\n    const [searchField, setSearchField] = useState('')\r\n    const [bgColor, setBgColor] = useState('white')\r\n\r\n    const listItems = props.items\r\n                        .filter((item: Player) => (item.first_name+\" \"+item.last_name).toLowerCase().includes(searchField.toLowerCase()))\r\n                        .map((item: Player) =><><PlayerCard player={item} handleFavorite={props.handleFavorite}/> <br/></>)\r\n    return (\r\n        <div style={{padding: '5px', alignItems: 'center', backgroundColor: bgColor}}>\r\n            <h2>{props.title}</h2>\r\n            <label htmlFor=\"search\">Search: </label>\r\n            <input type=\"text\" name=\"search\" value={searchField} onChange={e => setSearchField(e.target.value)}/>\r\n            { \r\n                props.bgColors &&\r\n                    <p>Background Color: \r\n                        {\r\n                            props.bgColors.map(color => <button onClick={()=>setBgColor(color)}>{color}</button>)\r\n                        }\r\n                    </p>\r\n            }\r\n            <ul>\r\n                {listItems}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport './App.css';\nimport List from './components/List'\nimport Player from './types/Player'\nimport { useAlert } from 'react-alert'\n\nfunction App() {\nconst [players, setPlayers] = useState<Array<Player>>([])\nconst alert = useAlert()\n\nuseEffect(() => {\n  console.log(\"Fetching data\")\n  alert.info('Loading...', {\n    timeout: 1000\n  })\n  fetch(`https://www.balldontlie.io/api/v1/players`)\n  .then(res => res.json())\n  .then(\n    result => setPlayers(result.data.map((player: Player) => {\n      return {...player, favorite: false}\n    })),\n    error => alert.error('Error while fetching, try again')\n  )\n}, [])\n\nconst handleFavorite = (id: number, checked: boolean) => {\n  setPlayers((prevPlayers) => { \n    let player = prevPlayers.find(player => player.id===id)\n    if (player){\n      prevPlayers[prevPlayers.indexOf(player)].favorite = checked\n      console.log(prevPlayers);\n    }\n    return [...prevPlayers]\n  })\n}\n\nreturn (\n  <div className=\"App\">\n    <h1>NBA Players</h1>\n    <ListsContatiner>\n      <List title=\"Players:\" items={players} handleFavorite={handleFavorite} />\n      <List title=\"Favorites:\" bgColors={['White', 'Teal', 'Yellow']} items={players.filter(player => player.favorite)} handleFavorite={handleFavorite} />\n    </ListsContatiner>\n  </div>\n);\n}\nexport default App;\n\nconst ListsContatiner = styled.div`\n  display: flex;\n  justify-content: center;\n`","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n}\n\nReactDOM.render(\n  <AlertProvider template={AlertTemplate} {...options}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </AlertProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}